<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Zero to Snowflake</title>
      <link href="/Zero-to-Snowflake/"/>
      <url>/Zero-to-Snowflake/</url>
      
        <content type="html"><![CDATA[<h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h1><p>&emsp;&emsp;欢迎来到Snowflake！这本入门级指南专为数据库和数据仓库管理员和架构师设计，将帮助您浏览 Snowflake 界面，并向您介绍我们的一些核心功能。注册 Snowflake 的 30 天免费试用版，并按照此实验练习进行操作。一旦我们介绍了基础知识，您就可以开始处理自己的数据，并像专业人士一样深入研究 Snowflake 的更高级功能。</p><h2 id="先决条件："><a href="#先决条件：" class="headerlink" title="先决条件："></a>先决条件：</h2><ul><li>使用 Snowflake 30 天免费试用环境</li><li>熟悉SQL、数据库概念和对象的基本知识</li><li>熟悉 CSV 逗号分隔文件和 JSON 半结构化数据</li></ul><h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ul><li>如何创建schema、database、table、view和Virtual Warehouse。</li><li>如何加载结构化和半结构化数据。</li><li>如何对Snowflake中的数据执行分析查询，包括表之间的联接。</li><li>如何克隆对象。</li><li>如何使用Time Travel撤销错误。</li><li>如何创建角色和用户，并授予他们权限。</li><li>如何安全轻松地与其他帐户共享数据。</li><li>如何在 Snowflake Data Marketplace 中使用数据集。</li></ul><h1 id="2-准备实验环境"><a href="#2-准备实验环境" class="headerlink" title="2.准备实验环境"></a>2.准备实验环境</h1><p>&emsp;&emsp;如果您尚未注册，请<a href="https://signup.snowflake.com/developers"><strong>注册 Snowflake 30 天免费试用版</strong></a>。本实验的其余部分假定您使用的是通过注册试用版创建的新 Snowflake 帐户。<br>&emsp;&emsp;用于此实验的 Snowflake 版本（标准版、企业版、关键业务版等）和云提供商（AWS、Azure、GCP）和区域（美国东部、欧盟等）无关紧要。但是，我们建议您选择离您最近的区域，以及我们最受欢迎的产品 Enterprise（我们最受欢迎的产品）作为您的 Snowflake 版本。<br>注册后，您将收到一封电子邮件，其中包含用于访问您的 Snowflake 帐户的激活链接和 URL。</p><h1 id="3-Snowflake用户界面和Lab-Story"><a href="#3-Snowflake用户界面和Lab-Story" class="headerlink" title="3. Snowflake用户界面和Lab Story"></a>3. Snowflake用户界面和Lab Story</h1><blockquote><p>关于屏幕截图、示例代码和环境本实验中的屏幕截图描述的示例和结果可能与完成练习时看到的略有不同。</p></blockquote><h2 id="3-1-登录-Snowflake-用户界面-（UI）"><a href="#3-1-登录-Snowflake-用户界面-（UI）" class="headerlink" title="3.1 登录 Snowflake 用户界面 （UI）"></a>3.1 登录 Snowflake 用户界面 （UI）</h2><p>&emsp;&emsp;打开浏览器窗口，然后输入随注册电子邮件一起发送的 Snowflake 30 天试用环境的 URL。<br>&emsp;&emsp;您应该会看到以下登录对话框。输入您在注册时指定的用户名和密码：<br><img src="/Zero-to-Snowflake/signin.png"></p><h2 id="3-2-导航-Snowflake-UI"><a href="#3-2-导航-Snowflake-UI" class="headerlink" title="3.2 导航 Snowflake UI"></a>3.2 导航 Snowflake UI</h2><p>&emsp;&emsp;让我们来熟悉一下Snowflake吧！本节介绍用户界面的基本组件</p><h3 id="1-Worksheets"><a href="#1-Worksheets" class="headerlink" title="1.Worksheets"></a>1.Worksheets</h3><p><img src="/Zero-to-Snowflake/worksheets.png"><br>&emsp;&emsp;<strong>工作表</strong>选项卡提供了一个界面，用于提交 SQL 查询、执行 DDL 和 DML 操作，以及在查询或操作完成时查看结果。单击右上角的 <strong>+</strong> 即可创建一个新工作表。<br><img src="/Zero-to-Snowflake/query.png"></p><h3 id="2-Dashboard"><a href="#2-Dashboard" class="headerlink" title="2.Dashboard"></a>2.Dashboard</h3><p><img src="/Zero-to-Snowflake/Dashboard.png"><br>&emsp;&emsp;<strong>仪表板</strong>选项卡允许您创建一个或多个图表的灵活显示（以磁贴的形式，可以重新排列）。磁贴和小组件是通过执行在工作表中返回结果的 <strong>SQL 查询</strong>来生成的。<br><img src="/Zero-to-Snowflake/dashboard2.png"><br>&emsp;&emsp;可以看到，通过仪表盘，我们可以快速地执行出预先写好的SQL语句，并以磁贴的形式展示出来。</p><h3 id="3-Data"><a href="#3-Data" class="headerlink" title="3.Data"></a>3.Data</h3><h4 id="3-1-Database"><a href="#3-1-Database" class="headerlink" title="3.1 Database"></a>3.1 Database</h4><p><img src="/Zero-to-Snowflake/database.png"><br>&emsp;&emsp;在<strong>数据</strong>下，<strong>数据库</strong>选项卡显示有关已创建或有权访问的数据库的信息。您可以创建、克隆、删除或转移数据库的所有权，以及在 UI 中加载数据。单击右上角的 <strong>+</strong> 即可创建一个新数据库。</p><h4 id="3-2-Private-Sharing"><a href="#3-2-Private-Sharing" class="headerlink" title="3.2 Private Sharing"></a>3.2 Private Sharing</h4><p><img src="/Zero-to-Snowflake/ps.png"><br>&emsp;&emsp;此外，在<strong>数据</strong>下，<strong>私有共享数据</strong>选项卡可以配置数据共享，以便在单独的 Snowflake 帐户或外部用户之间轻松安全地共享 Snowflake 表，而无需创建数据副本。我们将在第 10 节中介绍数据共享。</p><h3 id="4-Marketplace"><a href="#4-Marketplace" class="headerlink" title="4.Marketplace"></a>4.Marketplace</h3><p><img src="/Zero-to-Snowflake/market.png"><br>&emsp;&emsp;在<strong>市场</strong>选项卡中，任何 Snowflake 客户都可以浏览和使用提供商提供的数据集。共享数据有两种类型：公共数据和个性化数据。公共数据是可用于即时查询的免费数据集。个性化数据需要联系数据提供商以批准共享数据。</p><h3 id="5-Activity"><a href="#5-Activity" class="headerlink" title="5.Activity"></a>5.Activity</h3><h4 id="5-1-Query-History-Copy-History"><a href="#5-1-Query-History-Copy-History" class="headerlink" title="5.1 Query History &amp; Copy History"></a>5.1 Query History &amp; Copy History</h4><p><img src="/Zero-to-Snowflake/qh.png"> <img src="/Zero-to-Snowflake/ch.png"><br>&emsp;&emsp;在<strong>活动</strong>下，有两个选项卡：<strong>查询历史记录</strong>和<strong>复制历史记录</strong>：</p><ul><li><strong>查询历史记录</strong>是显示以前查询的位置，以及可用于优化结果（用户、仓库、状态、查询标记等）的筛选器。查看过去 14 天内从您的 Snowflake 账户执行的所有查询的详细信息。单击查询 ID 以获取更多信息。</li><li><strong>复制历史记录</strong>显示为将数据提取到 Snowflake 而运行的<strong>复制命令</strong>的状态。</li></ul><h3 id="6-Admin"><a href="#6-Admin" class="headerlink" title="6.Admin"></a>6.Admin</h3><h4 id="6-1-Cost-Management"><a href="#6-1-Cost-Management" class="headerlink" title="6.1 Cost Management"></a>6.1 Cost Management</h4><p><img src="/Zero-to-Snowflake/cm.png"><br>&emsp;&emsp;在<strong>管理员</strong>下，<strong>成本管理</strong>选项卡显示出费用的使用情况，供管理员了解成本和性价比指标。通过设置预算和资源监视器来控制支出，并发现用于优化 Snowflake 消耗的开箱即用见解。</p><h4 id="6-2-Warehouses"><a href="#6-2-Warehouses" class="headerlink" title="6.2 Warehouses"></a>6.2 Warehouses</h4><p><img src="/Zero-to-Snowflake/wh.png"><br>&emsp;&emsp;在<strong>管理员</strong>下，<strong>仓库</strong>选项卡可用于设置和管理称为虚拟仓库的<strong>计算资源</strong>，以在 Snowflake 中加载或查询数据。您的环境中已存在一个名为 <code>COMPUTE_WH</code> 的仓库。</p><h4 id="6-2-Users-Roles"><a href="#6-2-Users-Roles" class="headerlink" title="6.2 Users &amp; Roles"></a>6.2 Users &amp; Roles</h4><p><img src="/Zero-to-Snowflake/users.png"><br>&emsp;&emsp;在<strong>管理员</strong>下，<strong>用户和角色</strong>选项卡的<strong>用户</strong>子选项卡显示帐户中的用户列表、默认角色和用户所有者。对于新帐户，不会显示任何记录，因为尚未创建其他角色。通过当前角色授予的权限决定了此选项卡显示的信息。若要查看选项卡上提供的所有信息，请将您的角色切换为 ACCOUNTADMIN。<br> <img src="/Zero-to-Snowflake/roles.png"><br>&emsp;&emsp;在<strong>管理员</strong>下，<strong>用户和角色</strong>选项卡的<strong>角色</strong>子选项卡显示角色及其层次结构的列表。可以在此选项卡中创建、重新组织角色并将其授予用户。还可以通过选择<strong>表</strong>子选项卡以表格&#x2F;列表格式显示角色。</p><h2 id="实验室故事"><a href="#实验室故事" class="headerlink" title="实验室故事"></a>实验室故事</h2><p>&emsp;&emsp;该实验室基于花旗自行车的分析团队，花旗自行车是美国纽约市一个真正的全市自行车共享系统。该团队希望对来自其内部交易系统的数据进行分析，以更好地了解他们的乘客以及如何最好地为他们服务。<br>&emsp;&emsp;我们将首先将来自骑手交易的结构化数据加载到 Snowflake 中。稍后，我们将使用开源的半结构化 JSON 天气数据来确定骑自行车的次数与天气之间是否存在任何相关性。<code>.csv</code></p><h1 id="4-准备加载数据"><a href="#4-准备加载数据" class="headerlink" title="4.准备加载数据"></a>4.准备加载数据</h1>]]></content>
      
      
      <categories>
          
          <category> Snowflake </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Snowflake </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Snowflake❄注册</title>
      <link href="/Snowflake-register/"/>
      <url>/Snowflake-register/</url>
      
        <content type="html"><![CDATA[<h1 id="Snowflake注册"><a href="#Snowflake注册" class="headerlink" title="Snowflake注册"></a>Snowflake注册</h1><h2 id="1、Snoflake注册"><a href="#1、Snoflake注册" class="headerlink" title="1、Snoflake注册"></a>1、Snoflake注册</h2><p>&emsp;&emsp;Snowflake为开发者提供了30天400美元的免费的额度，用完为止。注册地址：<a href="https://signup.snowflake.com/">https://signup.snowflake.com/</a></p><h2 id="2、注册步骤"><a href="#2、注册步骤" class="headerlink" title="2、注册步骤"></a>2、注册步骤</h2><p><img src="/Snowflake-register/form.png"></p><ul><li>打开连接 <a href="https://signup.snowflake.com/">https://signup.snowflake.com/</a> ，从上至下依次填写表单 姓名、邮箱、公司名、职位、国家，点击<strong>CONTINUE</strong>（最好使用outlook或google邮箱注册，国内邮箱可能会出现失败的情况）；<br><img src="/Snowflake-register/version2.png"></li><li>选择Snowflake edition和Cloud provider，这里选择了<strong>Enterprise</strong>和<strong>Amazon Web Services</strong>，区域选择<strong>Tokyo</strong>（离国内进），点击<strong>GET STARTED</strong>；<br><img src="/Snowflake-register/diaocha.png"></li><li>调查问卷，选择<strong>跳过</strong>；<br><img src="/Snowflake-register/email_v.png"></li><li>注册完成，邮箱验证激活；<br><img src="/Snowflake-register/email_receive.png"></li><li>登录自己刚刚注册填写的邮箱，查看是否收到了一封标题为<strong>Activate your Snowflake account</strong>的邮件，如果没收到，看一下垃圾邮件里，点击<strong>CLICK TO ACTIVATE</strong>，记住下面的这个链接 <strong><a href="https://rwmpdkz-lr40722.snowflakecomputing.com/">https://rwmpdkz-lr40722.snowflakecomputing.com</a></strong>，以后可以通过这个链接来登录Snowflake；<br><img src="/Snowflake-register/register.png"></li><li>输入需要注册的用户名以及密码，点击<strong>Get started</strong>；<br><img src="/Snowflake-register/finish.png"></li><li>完成注册~！</li></ul><h1 id="DBever连接Snowflake"><a href="#DBever连接Snowflake" class="headerlink" title="DBever连接Snowflake"></a>DBever连接Snowflake</h1><ul><li><a href="https://repo1.maven.org/maven2/net/snowflake/snowflake-jdbc/3.14.4/">https://repo1.maven.org/maven2/net/snowflake/snowflake-jdbc/3.14.4/</a> 下载Snowflake驱动<strong>snowflake-jdbc-3.14.4.jar</strong> ；<br><img src="/Snowflake-register/dbever.png"></li><li>打开DBever，点击左上角<strong>新建数据库连接</strong>，搜索框里搜索<strong>Snowflake</strong>，点击<strong>下一步</strong>；<br><img src="/Snowflake-register/connected.png"></li><li>Host填写刚刚注册的邮件里的链接 <strong>（在上边让你记住的那个）</strong>，Database、Warehouse<strong>按需填写</strong>，用户名、密码填写<strong>注册的用户名以及密码</strong>，点击<strong>编辑驱动设置</strong>；<br><img src="/Snowflake-register/add_driven.png"></li><li>点击<strong>库</strong>，把自带的<strong>全选</strong>，<strong>删除</strong>掉；<br><img src="/Snowflake-register/add_driven2.png"></li><li>点击<strong>添加文件</strong>，找到刚刚下载的<strong>snowflake-jdbc-3.14.4.jar</strong>添加进来，点击确定；<br><img src="/Snowflake-register/fini.png"></li><li>点击<strong>测试连接</strong>，出现<strong>已连接</strong>，表示成功连接到Snowflake，点击<strong>确定</strong>，点击<strong>完成</strong>；<br><img src="/Snowflake-register/completed.png"></li><li>双击打开<strong>左侧的数据库连接</strong>，即可使用DBever，管理Snowflake。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Snowflake </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Snowflake </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Snowflake❄</title>
      <link href="/Snowflake/"/>
      <url>/Snowflake/</url>
      
        <content type="html"><![CDATA[<h1 id="Snowflake：一个革命性的云数据平台"><a href="#Snowflake：一个革命性的云数据平台" class="headerlink" title="Snowflake：一个革命性的云数据平台"></a>Snowflake：一个革命性的云数据平台</h1><h2 id="1-什么是Snowflake？"><a href="#1-什么是Snowflake？" class="headerlink" title="1. 什么是Snowflake？"></a>1. 什么是Snowflake？</h2><p>&emsp;&emsp;Snowflake是一种云数据仓库，它提供了一个全面的、基于SQL的数据分析解决方案。Snowflake以其独特的架构和优秀的性能，赢得了许多企业的青睐。它的设计理念是将计算和存储分离，使得用户可以独立地调整这两个方面，以满足自身的需求。</p><h2 id="2-Snowflake的特点"><a href="#2-Snowflake的特点" class="headerlink" title="2. Snowflake的特点"></a>2. Snowflake的特点</h2><h3 id="2-1-传统数仓-计算与存储耦合"><a href="#2-1-传统数仓-计算与存储耦合" class="headerlink" title="2.1 传统数仓 - 计算与存储耦合"></a>2.1 传统数仓 - 计算与存储耦合</h3><p float="center">  <img src="shared-nothing.png" width="500" /></p><p>&emsp;&emsp;传统数据仓库通常采用的是计算和存储耦合的架构(<strong>Shared-nothing Architecture</strong>)。在这种架构中，每个节点都有自己的计算资源和存储空间，数据被横向分布在各个节点上。计算过程中，每个节点只需处理其自身存储的数据。<br>&emsp;&emsp;这种架构的优点在于理论上速度很快，因为它减少了数据在各节点间的传输时间，并且在数据处理过程中不会出现资源争抢的情况。然而，这种架构也有一些明显的缺点，包括：  </p><ul><li>数据分布不均匀，因为数据需要预先分配到各个节点，而每个节点只处理其自身的数据；  </li><li>节点的增加或减少操作相当复杂，因为大量数据需要重新分配；  </li><li>无法单独增加计算资源或存储资源，因为计算和存储是耦合的。这意味着，当增加存储资源时，也会增加计算资源，但这些计算资源可能并不需要。</li></ul><h3 id="2-2-Snowflake-计算与存储分离"><a href="#2-2-Snowflake-计算与存储分离" class="headerlink" title="2.2 Snowflake - 计算与存储分离"></a>2.2 Snowflake - 计算与存储分离</h3><p float="center">  <img src="architecture.png" width="1000" /></p><p>&emsp;&emsp;为了应对传统数据仓库的挑战，Snowflake引入了一种新的架构，即计算和存储的分离架构(<strong>Shared-data Architecture</strong>)。在这一架构中，存储层只负责数据的存储，而计算层则专注于数据的计算。在每次计算过程中，计算节点会从存储层均匀地获取数据，然后在节点内部完成计算。<br>&emsp;&emsp;这种架构允许用户自由地增加或减少计算资源和存储空间。计算层是Shared-nothing的Virtual Warehouse，由EC2的Cluster组成，每个EC2为一个Worker Node，包含本地的Local Disk作为Table Data Cache。如果Query很复杂，可以选择增加每个Virtual Warehouse的计算节点的数量；如果并发性很重要，那就可以选择增加Virtual Warehouse的数量。当使用完毕后，可以关闭所有的Virtual Warehouse，这样只需要为存储空间付费，而不需要为计算资源付费。<br>&emsp;&emsp;存储层是Amazon S3(目前也支持Microsoft Azure 和Google Cloud Platform)，它可以被视为具有无限容量、数据不会丢失且成本超低的存储解决方案。</p><blockquote><p>微软对Snowflake的支持，首先，微软的云服务业务模型主要依赖规模来吸引消费。因此，尽管从某种程度上来说，支持Snowflake可能会冲击微软自家的数据服务，但是，如果Snowflake的用户选择将数据存储在Azure上，那么这对微软来说就是有利的。这种策略的核心就是，无论客户选择使用什么样的解决方案，只要他们的数据在微软的掌控之下，微软就会提供支持。 其次，未来的趋势是多云，也就是说，企业会选择将数据和服务分布在多个云平台上，以降低技术和商业风险。在这种情况下，易于迁移就变得尤为重要。如果微软只是防守自家的领地，那么客户就无法从AWS轻松转移到Azure。相反，如果微软提供了在Azure上运行Snowflake的解决方案，那么就为AWS的客户提供了一个转换的机会。这个观点可以通过观察Snowflake最近一轮由Salesforce领投的融资情况得到验证，这进一步证明了数据共享战略的重要性。 最后，从战略角度来看，微软不仅要培养良好的合作伙伴，也需要培养强大的竞争对手。比如，Azure Databricks就是一个很好的例子。尽管许多人误以为Databricks是微软的产品，但实际上，Azure Databricks已经成为了Azure的一线服务。云计算的目标是让客户得到最大的便利，如果有优秀的技术，那么平台应当吸引并支持这些技术的使用。</p></blockquote><h3 id="2-3-性能优化"><a href="#2-3-性能优化" class="headerlink" title="2.3 性能优化"></a>2.3 性能优化</h3><p>&emsp;&emsp;尽管Snowflake解决了传统数据仓库的一些关键问题，但是传统数据仓库的优势——性能，却是Snowflake的短板。为了优化性能，Snowflake进行了以下几项工作：  </p><div style="display: flex; justify-content: space-around;">  <figure>    <img src="localcaching.png" width="400" />    <figcaption style="text-align: center;">Local Caching</figcaption>  </figure></div><ul><li><strong>Local Caching</strong>： 每个节点都会保存一些常用的数据在本地的硬盘上，这些数据相当于cache，查询时会按照<a href="https://baike.baidu.com/item/LRU"><strong>LRU</strong></a>的方法逐渐替换掉local cache中的data。在分配任务时，服务层会采用一次性Hash的方法给每个节点分配任务，尽可能地增加cache hit rate，从而减少计算层和存储层之间的传输，从而加快处理速度。</li></ul><div style="display: flex; justify-content: space-around;">  <figure>    <img src="filestealing.png" width="400" />    <figcaption style="text-align: center;">File Stealing1</figcaption>  </figure>  <figure>    <img src="filestealing2.png" width="400" />    <figcaption style="text-align: center;">File Stealing2</figcaption>  </figure></div><ul><li><strong>File Stealing</strong>： 假设存在两个计算节点，每个节点都被赋予了三个文件的处理任务。节点1迅速完成了其三个文件的处理，而节点2还未开始处理任何文件。在这种情况下，如果得到节点2的许可，节点1可以将节点2的一个文件的所有权转移到自己身上。这样，处理速度较快的节点1就能处理更多的文件，而处理速度较慢的节点2的负载则相应减轻，从而达到整体的加速效果。</li></ul><div style="display: flex; justify-content: space-around;">  <figure>    <img src="storage.png" width="500" />    <figcaption style="text-align: center;">Storage1</figcaption>  </figure>  <figure>    <img src="storage2.png" width="400" />    <figcaption style="text-align: center;">Storage2</figcaption>  </figure></div><ul><li><strong>Storage</strong>： 第三个优化策略关注于存储层的优化。所有的表格文件在存储时会被水平地切分成n个部分，每一部分采用列式存储的方式，并存储在Amazon S3中。此外，每一个文件块都会有一个header信息，用于记录每一列的存储位置（offset）。这些文件块的信息都会被记录在服务层。当用户发出一个查询请求时，服务层可以根据该查询请求精确地找出所需数据在存储层的位置，从而避免了无用的内容读取，实现了加速效果。</li></ul><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><p>&emsp;&emsp;Snowflake是一个强大的云数据平台，它提供了一种简单，高效，灵活的方式来处理和分析数据。无论你是一个小型团队，还是一个大型企业，Snowflake都能够满足你的需求。  </p><p>未完。。。</p><p><strong>参考资料：</strong><br><a href="https://pages.cs.wisc.edu/~remzi/Classes/739/Fall2018/Papers/p215-dageville-snowflake.pdf">[1]Dageville, Benoît, Cruanes T , Zukowski M ,et al.The Snowflake Elastic Data Warehouse.[C]&#x2F;&#x2F;ACM.ACM, 2016.DOI:10.1145&#x2F;2882903.2903741.</a><br><a href="https://www.bilibili.com/video/BV1oK41137AX">https://www.bilibili.com/video/BV1oK41137AX</a><br><a href="https://zhuanlan.zhihu.com/p/54439354">https://zhuanlan.zhihu.com/p/54439354</a><br><a href="https://zhuanlan.zhihu.com/p/594213354">https://zhuanlan.zhihu.com/p/594213354</a><br><a href="https://developer.aliyun.com/article/789944">https://developer.aliyun.com/article/789944</a><br><a href="https://zhuanlan.zhihu.com/p/366369705">https://zhuanlan.zhihu.com/p/366369705</a><br><a href="https://www-conf.slac.stanford.edu/xldb2016/talks/published/Tues_7_Marcin_Z_XLDB-2016-05-24-release.pdf">https://www-conf.slac.stanford.edu/xldb2016/talks/published/Tues_7_Marcin_Z_XLDB-2016-05-24-release.pdf</a>  </p>]]></content>
      
      
      <categories>
          
          <category> Snowflake </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Snowflake </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p><img src="/hello-world/23027a7c.png"></p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post1&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/modify.css"/>
      <url>/css/modify.css</url>
      
        <content type="html"><![CDATA[#page-header {  background: transparent !important;}#page-header.post-bg,#page-header.not-home-page {  height: 280px !important;}#page-header #post-info {  bottom: 40px !important;}#page-header #page-site-info {  top: 140px !important;}@media screen and (max-width: 768px) {  #page-header.not-home-page {    height: 200px !important;  }  #page-header #post-info {    bottom: 10px !important;  }  #page-header #page-site-info {    top: 100px !important;  }}.top-img {  height: 250px;  margin: -50px -40px 50px;  border-top-left-radius: inherit;  border-top-right-radius: inherit;  background-position: center center;  background-size: cover;  -webkit-transition: all 0.3s;  -moz-transition: all 0.3s;  -o-transition: all 0.3s;  -ms-transition: all 0.3s;  transition: all 0.3s;}@media screen and (max-width: 768px) {  .top-img {    height: 230px;    margin: -36px -14px 36px;  }}[data-theme='dark'] .top-img {  filter: brightness(0.8);}#footer:before {  background-color: rgba(255,255,255,0.5);}[data-theme='dark'] #footer:before {  background-color: rgba(0,0,0,0.5);}#footer-wrap,#footer-wrap a {  color: #111;  -webkit-transition: unset;  -moz-transition: unset;  -o-transition: unset;  -ms-transition: unset;  transition: unset;}[data-theme='dark'] #footer-wrap,[data-theme='dark'] #footer-wrap a {  color: var(--light-grey);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{  display: block;  position: fixed;  margin: 0;  padding: 0;  border: 0;  outline: 0;  left: 0;  top: 0;  width: 100%;  height: 100%;  pointer-events: none;  /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */  z-index: -1;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
  
</search>
